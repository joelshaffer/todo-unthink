<todo-app>

  <h1>Things to Do</h1>

  <todo-item
      each={ item in state.todos }
      id={ item.id }
      title={ item.title }
      complete={ item.completed }
      on-deleted={ onDeleteTodo }
      on-edited={ onTodoEdited }
  />

  <input onkeyup="{ updateTitle }" type="text" value={state.todoTitle}/>
  <button onclick={ onCreateTodo }>Create Todo</button>


  <script type="ts">
    import {RiotComponentExport} from 'riot';
    import {TodoModel} from '../../../server/models/todo-model';
    import {getTodos, createTodo, updateTodo, deleteTodo} from './api';
    import TodoItem from '../../components/todo-item.riot';

    interface State {
      todos: TodoModel[];
      todoTitle: string;
    }

    interface TodoApp extends RiotComponentExport<never, State> {
      state: State;
    }

    function build(): TodoApp {
      return {
        state: {
          todos: [],
          todoTitle: ''
        },

        onBeforeMount(): void {
          getTodos()
            .then(todos => {
              this.update({
                todos: todos
              });
            });
        },

        onCreateTodo(): void {
          createTodo(this.state.todoTitle).then(todoId => {
            console.log(todoId);
            getTodos().then(todos => {
              this.update({
                todos: todos
              });
            });
          });
        },

        updateTitle(e: InputEvent): void {
          this.update({
            todoTitle: (e.target as HTMLInputElement).value
          });
        },

        async onDeleteTodo(id: string): Promise<void> {
          await deleteTodo(id);
          getTodos().then(todos => {
            this.update({
              todos: todos
            });
          });
        },

        async onTodoEdited(title: string, todoId: string, completed: boolean): Promise<void> {

          const newTitle = title;
          const id = parseInt(todoId);

          await updateTodo(new TodoModel({title: newTitle, id:id, completed: completed}));
          getTodos().then(todos => {
            this.update({
              todos: todos
            });
          });
        },


      };
    }

    build.components = {
      TodoItem
    };

    export default build;
  </script>

  <style type="scss">
    :host {
      display: block;
    }
    input[type=checkbox] {
      margin-right: 1rem;
    }
    input[type=text] {
      font-size: 1rem;
      margin-right: 1rem;
      margin-bottom: 1rem;
    }
    input[type=button] {
      font-size: 1rem;
      padding: 0.25rem;
    }
  </style>
</todo-app>